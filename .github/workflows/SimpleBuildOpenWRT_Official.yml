name: Simple Build OpenWRT for Xiaomi Mi Router 4 with Custom Packages

on:
  #手动运行
  workflow_dispatch:
  #文件修改时触发
  push:
    branches:
      - main
    # 添加路径过滤，仅当当前工作流文件被修改时触发
    paths:
      - .github/workflows/SimpleBuildOpenWRT_Official.yml  # 需替换为当前工作流文件的实际路径
env:
  TERM: xterm
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 10240
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'
          remove-docker-images: 'true'
      - name: Checkout Self Repo
        uses: actions/checkout@main
        
          
      - name: Clone OpenWRT.org_Official
        run: |
          git clone http://github.com/openwrt/openwrt openwrt

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y build-essential musl-tools libncurses5-dev libncursesw5-dev gawk git libssl-dev gettext zlib1g-dev swig rsync ruby unzip libpam0g-dev libcurl4-openssl-dev libdeflate-dev
          
      - name: Update feeds
        run: |
          cd openwrt
          echo 'src-git passwall https://github.com/xiaorouji/openwrt-passwall' >>feeds.conf.default
          echo 'src-git OpenClash https://github.com/vernesong/OpenClash' >>feeds.conf.default
          echo 'src-git small8 https://github.com/kenzok8/small-package' >>feeds.conf.default
          ./scripts/feeds update -a
          ./scripts/feeds install -a
          cp ../config_for_OpenWrt_org config
          make defconfig
          


      - name: Build firmware
        id: build
        run: |
          cd openwrt
          # 检查 DEVICE_MODEL 是否已设置为 "Xiaomi Mi Router 4"
          if ! grep -q '^CONFIG_TARGET_DEVICE_MODEL="Xiaomi Mi Router 4"$' .config; then
            echo 'CONFIG_TARGET_DEVICE_MODEL="Xiaomi Mi Router 4"' >>.config
          fi
          # 检查 TARGET_ARCH 是否已设置为 "mt7621"
          if ! grep -q '^CONFIG_TARGET_ARCH="mt7621"$' .config; then
            echo 'CONFIG_TARGET_ARCH="mt7621"' >>.config
          fi
          # 重新运行 defconfig 以应用更改
          make defconfig
          make -j$(nproc) toolchain/install  V=s || make -j1 toolchain/install  V=s
          make -j$(nproc) tools/install  V=s || make -j1 tools/install  V=s
          
          make -j$(nproc) package/feeds/luci/luci-base/compile V=s || make -j$(nproc) package/luci/modules/luci-base/compile V=s || make -j1 package/feeds/luci/luci-base/compile V=s || make -j1 package/luci/modules/luci-base/compile V=s
          make -j$(nproc) V=s > compile.log 2>&1|| make -j1 V=s > compile.log 2>&1
        
          
          
      - name: 查看日志结尾300行
        if: always()
        run: |
          cd openwrt
          tail -300 compile.log


      - name: Upload firmware
        if: steps.build.conclusion == 'success'
        uses: actions/upload-artifact@master
        with:
          name: openwrt-firmware
          path: openwrt/bin/targets/ramips/mt7621/*
          
      - name: Delete workflow runs
        uses: Mattraks/delete-workflow-runs@v2
        with:
          token: ${{ secrets.ACTIONS_TRIGGER_PAT }}
          repository: ${{ github.repository }}
          retain_days: 0
          keep_minimum_runs: 2
